import Foundation








































public protocol OllamaProtocol: Sendable {

    var baseURL: URL { get }


    var configuration: OllamaConfiguration { get }

















    func listModels() async throws -> [ModelListEntry]
























    func showModel(name: OllamaModelName, verbose: Bool?) async throws -> ModelInformation


























    func pullModel(
        name: OllamaModelName,
        options: PullOptions
    ) async throws -> AsyncThrowingStream<OperationProgress, Error>


























    func pushModel(
        name: OllamaModelName,
        options: PushOptions
    ) async throws -> AsyncThrowingStream<OperationProgress, Error>





















    func copyModel(source: OllamaModelName, destination: OllamaModelName) async throws


















    func deleteModel(name: OllamaModelName) async throws























    func listRunningModels() async throws -> [RunningModelInfo]























    func createModel(_ request: CreateModelRequest) async throws -> AsyncThrowingStream<OperationProgress, Error>
















    func checkBlobExists(digest: String) async throws -> Bool


















    func pushBlob(digest: String, data: Data) async throws















    func getVersion() async throws -> VersionResponse
}
